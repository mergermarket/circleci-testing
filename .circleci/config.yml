version: 2.1

executors:
  quick-exec:
    machine:
      image: circleci/classic:201808-01

commands:
  cdflow-cache:
    steps:
      - restore_cache: # ensure this step occurs *before* installing dependencies
          keys: # uses increasingly general patterns to restore cache
            - pip-packages-{{ .Branch }}-{{ checksum "cdflow.yml" }}-v1
            - pip-packages-{{ .Branch }}-{{ checksum "cdflow.yml" }}
      - run:
          name: Installing cdflow
          command: |
            pyenv global 3.5.2
            pip3 install cdflow
      - save_cache:
          key: pip-packages-{{ .Branch }}-{{ checksum "cdflow.yml" }}-v1
          paths:
            - /opt/circleci/.pyenv/versions/3.5.2/
            - /opt/circleci/.pyenv/shims/cdflow

jobs:
  test:
    executor: quick-exec
    steps:
      - checkout
      - cdflow-cache
      - run:
          name: Run Help
          command: cdflow --help

  release:
    executor: quick-exec
    steps:
      - checkout
      - cdflow-cache
      - run:
          name: Get Platform Config
          command: |
            git clone https://github.com/mergermarket/test-platform-config.git platform-config
      - run:
          name: Run Release
          command: |
            cdflow release --platform-config ./platform-config 1-marcus -v

  deploy:
    executor: quick-exec
    steps:
      - checkout
      - run: echo "completed the 'deploy' stage"

workflows:
  test-release-approve-deploy:
    jobs:
      - test:  # job runs cdflow help
          filters:  # only specified branch(es) will trigger build
            branches:
              only:
                - master

      - release: # job runs cdflow release
          context: DevTeam-Platform # contains the necessary creds
          requires: # only runs when "test" job has succeeded
            - test
          filters:
            branches:
              only:
                - master

      - hold: # job requiring manual approval in the CircleCI web application
          type: approval # This key-value pair sets workflow status to "On Hold"
          requires:
           - release

      - deploy: # This job requires the "hold" job and therefore acts as a manual deploy
          requires:
            - hold
          filters:
            branches:
              only:
                - master
