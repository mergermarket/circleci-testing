version: 2.1

executors:
  quick-exec:
    machine:
      image: circleci/classic:201808-01

# commands:
#   dependencies-cache:
#     steps:
#       - run: # the chown command to grants CircleCI access to dependency locations.
#           name: "Fix ownership of directories with Python packages"
#           command: |
#             sudo chown -R circleci:circleci /usr/local/bin
#             sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
#       - restore_cache: # ensure this step occurs *before* installing dependencies
#           key: 'pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'
#       - run:
#           name: "Installing dependencies"
#           command: | # use pipenv to install dependencies
#             sudo pip install pipenv
#             pipenv install
#       - save_cache:
#           key: 'pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'
#           paths:
#             - ".venv"
#             - "/usr/local/bin"
#             - "/usr/local/lib/python3.6/site-packages"

jobs:
  test:
    executor: quick-exec
    steps:
      - checkout
      - run: # the chown command to grants CircleCI access to dependency locations.
          name: "Fix ownership of directories with Python packages"
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache: # ensure this step occurs *before* installing dependencies
          key: 'pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'
      - run:
          name: "Install pipenv"
          command: | # use pipenv to install dependencies
            sudo pip install pipenv
            pipenv install
      - run:
          name: Install cdflow
          command: pipenv install cdflow
      - save_cache:
          key: 'pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}'
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      # - run:
      #     name: Run Help
      #     command: cdflow --help
      - run: echo "completed the 'test' stage"

  release:
    executor: quick-exec
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - pip-packages-v1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
            - pip-packages-v1-{{ .Branch }}-
            - pip-packages-v1-
      - run: # get this to work
          name: Run Help
          command: cdflow --help
      - run: echo "completed the 'release' stage"

  deploy_to_aslive:
    executor: quick-exec
    steps:
      - checkout
      - run: echo "completed the 'deploy_to_aslive' stage"

  smoke_test_aslive:
    executor: quick-exec
    steps:
      - checkout
      - run: echo "completed the 'smoke_test_aslive' stage"

  deploy_to_live:
    executor: quick-exec
    steps:
      - checkout
      - run: echo "completed the 'deploy_to_live' stage"

  smoke_test_live:
    executor: quick-exec
    steps:
      - checkout
      - run: echo "completed the 'smoke_test_live' stage"

workflows:
  version: 2
  build-test-and-approval-deploy:
    jobs:
      - test:  # custom job that builds the code
          filters:  # only the specified branche(s) will trigger the build
            branches:
              only:
                - master

      - release: # custom job; runs release suite
          requires: # release will not run until the `test` job is completed.
            - test
          filters:
            branches:
              only:
                - master

      # - deploy_to_aslive: # another custom job; runs deploy_to_aslive suite,
      #     requires: # deploy_to_aslive is dependent on the success of job `release`
      #       - release
      #     filters:
      #       branches:
      #         only:
      #           - master
      #
      # - smoke_test_aslive:
      #     requires:
      #       - deploy_to_aslive
      #     filters:
      #       branches:
      #         only:
      #           - master

      - hold: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          requires: # We only run the "hold" job when deploy_to_aslive has succeeded
           - release
           # - smoke_test_aslive

      # On approval of the `hold` job, any successive job that requires the `hold` job will run.
      # In this case, a user is manually triggering the deploy job.
      - deploy_to_live:
          requires:
            - hold
          filters:
            branches:
              only:
                - master

      # - smoke_test_live:
      #     requires:
      #       - deploy_to_live
      #     filters:
      #       branches:
      #         only:
      #           - master
